version: '3.4'

services:
  worker:
    build:
      context: .
      dockerfile: Service.ContatoCreateQueueConsumer/Dockerfile
    depends_on:
     - rabbitmq
    networks:
      - docker-network

  rabbitmq:
    image: masstransit/rabbitmq:latest
    ports:
     - "5672:5672"
     - "15672:15672"
    networks:
      - docker-network

  webapi:
    image: ${DOCKER_REGISTRY-}webapi
    build:
      context: .
      dockerfile: WebApi/Dockerfile
    ports:
     - "8081:8081"
    depends_on:
     - sqlserver
    networks:
      - docker-network

  sqlserver:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    environment:
      SA_PASSWORD: "Password#2024"
      ACCEPT_EULA: "Y"
    volumes:
      - C:\Dados\volumes\mssql:/var/opt/mssql/data
    ports:
      - "1433:1433"
    networks:
      - docker-network

  # prometheus:
  #   image: prom/prometheus
  #   user: root
  #   hostname: prometheus
  #   volumes:
  #     - C:\Dados\volumes\prometheus\config:/etc/prometheus
  #     - C:\Dados\volumes\prometheus\data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   ports:
  #     - 9090:9090
  #   networks:
  #     - docker-network

  # grafana:
  #   image: grafana/grafana
  #   hostname: grafana
  #   environment:
  #     -  GF_SECURITY_ADMIN_PASSWORD=admin
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - docker-network

networks:
  docker-network:
    driver: bridge